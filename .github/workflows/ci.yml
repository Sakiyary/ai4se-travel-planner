name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    runs-on: ubuntu-latest
    env:
      SUPABASE_URL: https://placeholder.supabase.co
      SUPABASE_ANON_KEY: public-anon-key
      SUPABASE_VOICE_BUCKET: voice-notes
      SUPABASE_EXPORT_BUCKET: plan-exports
      NEXT_PUBLIC_SUPABASE_URL: https://placeholder.supabase.co
      NEXT_PUBLIC_SUPABASE_ANON_KEY: public-anon-key
      NEXT_PUBLIC_SUPABASE_VOICE_BUCKET: voice-notes
      NEXT_PUBLIC_SUPABASE_EXPORT_BUCKET: plan-exports
      NEXT_PUBLIC_AMAP_KEY: dev-amap-key
      NEXT_PUBLIC_AMAP_SECURITY_JS_CODE: dev-amap-safe
      AMAP_WEB_KEY: dev-amap-key
      AMAP_SECURITY_JS_CODE: dev-amap-safe
      NEXT_PUBLIC_IFLYTEK_APP_ID: demo-app-id
      NEXT_PUBLIC_IFLYTEK_API_KEY: demo-api-key
      NEXT_PUBLIC_IFLYTEK_API_SECRET: demo-api-secret
      IFLYTEK_APP_ID: demo-app-id
      IFLYTEK_API_KEY: demo-api-key
      IFLYTEK_API_SECRET: demo-api-secret
      DASHSCOPE_API_KEY: demo-dashscope-key
      NEXT_PUBLIC_DASHSCOPE_API_KEY: demo-dashscope-key
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run typecheck

      - name: Unit tests
        run: npm run test -- --run

      - name: Build
        run: npm run build

      - name: Upload Next.js build artifact
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: |
            .next
            public
            package.json
            package-lock.json
            next.config.mjs
            Dockerfile

  docker:
    needs: quality
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && secrets.ACR_USERNAME && secrets.ACR_PASSWORD
    runs-on: ubuntu-latest
    env:
      REGISTRY: registry.cn-hangzhou.aliyuncs.com
      IMAGE_NAME: ai4se/travel-planner
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
